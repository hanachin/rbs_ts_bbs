class ActiveStorage::Blob < ActiveRecord::Base
  extend _ActiveRecord_Relation_ClassMethods[ActiveStorage::Blob, ActiveStorage::Blob::ActiveRecord_Relation]

  attr_accessor id (): Integer
  def id_changed?: () -> bool
  def id_change: () -> [Integer?, Integer?]
  def id_will_change!: () -> void
  def id_was: () -> Integer?
  def id_previously_changed?: () -> bool
  def id_previous_change: () -> Array[Integer?]?
  def id_previously_was: () -> Integer?
  def restore_id!: () -> void
  def clear_id_change: () -> void

  attr_accessor key (): String
  def key_changed?: () -> bool
  def key_change: () -> [String?, String?]
  def key_will_change!: () -> void
  def key_was: () -> String?
  def key_previously_changed?: () -> bool
  def key_previous_change: () -> Array[String?]?
  def key_previously_was: () -> String?
  def restore_key!: () -> void
  def clear_key_change: () -> void

  attr_accessor filename (): String
  def filename_changed?: () -> bool
  def filename_change: () -> [String?, String?]
  def filename_will_change!: () -> void
  def filename_was: () -> String?
  def filename_previously_changed?: () -> bool
  def filename_previous_change: () -> Array[String?]?
  def filename_previously_was: () -> String?
  def restore_filename!: () -> void
  def clear_filename_change: () -> void

  attr_accessor content_type (): String
  def content_type_changed?: () -> bool
  def content_type_change: () -> [String?, String?]
  def content_type_will_change!: () -> void
  def content_type_was: () -> String?
  def content_type_previously_changed?: () -> bool
  def content_type_previous_change: () -> Array[String?]?
  def content_type_previously_was: () -> String?
  def restore_content_type!: () -> void
  def clear_content_type_change: () -> void

  attr_accessor metadata (): String
  def metadata_changed?: () -> bool
  def metadata_change: () -> [String?, String?]
  def metadata_will_change!: () -> void
  def metadata_was: () -> String?
  def metadata_previously_changed?: () -> bool
  def metadata_previous_change: () -> Array[String?]?
  def metadata_previously_was: () -> String?
  def restore_metadata!: () -> void
  def clear_metadata_change: () -> void

  attr_accessor service_name (): String
  def service_name_changed?: () -> bool
  def service_name_change: () -> [String?, String?]
  def service_name_will_change!: () -> void
  def service_name_was: () -> String?
  def service_name_previously_changed?: () -> bool
  def service_name_previous_change: () -> Array[String?]?
  def service_name_previously_was: () -> String?
  def restore_service_name!: () -> void
  def clear_service_name_change: () -> void

  attr_accessor byte_size (): Integer
  def byte_size_changed?: () -> bool
  def byte_size_change: () -> [Integer?, Integer?]
  def byte_size_will_change!: () -> void
  def byte_size_was: () -> Integer?
  def byte_size_previously_changed?: () -> bool
  def byte_size_previous_change: () -> Array[Integer?]?
  def byte_size_previously_was: () -> Integer?
  def restore_byte_size!: () -> void
  def clear_byte_size_change: () -> void

  attr_accessor checksum (): String
  def checksum_changed?: () -> bool
  def checksum_change: () -> [String?, String?]
  def checksum_will_change!: () -> void
  def checksum_was: () -> String?
  def checksum_previously_changed?: () -> bool
  def checksum_previous_change: () -> Array[String?]?
  def checksum_previously_was: () -> String?
  def restore_checksum!: () -> void
  def clear_checksum_change: () -> void

  attr_accessor created_at (): Time
  def created_at_changed?: () -> bool
  def created_at_change: () -> [Time?, Time?]
  def created_at_will_change!: () -> void
  def created_at_was: () -> Time?
  def created_at_previously_changed?: () -> bool
  def created_at_previous_change: () -> Array[Time?]?
  def created_at_previously_was: () -> Time?
  def restore_created_at!: () -> void
  def clear_created_at_change: () -> void

  def variant_records: () -> ActiveStorage::VariantRecord::ActiveRecord_Associations_CollectionProxy
  def attachments: () -> ActiveStorage::Attachment::ActiveRecord_Associations_CollectionProxy
  def preview_image_attachment: () -> ActiveStorage::Attachment
  def preview_image_blob: () -> ActiveStorage::Blob




end

class ActiveStorage::Blob::ActiveRecord_Relation < ActiveRecord::Relation
  include _ActiveRecord_Relation[ActiveStorage::Blob]
  include Enumerable[ActiveStorage::Blob, self]


end

class ActiveStorage::Blob::ActiveRecord_Associations_CollectionProxy < ActiveRecord::Associations::CollectionProxy
end
